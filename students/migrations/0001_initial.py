# Generated by Django 4.2.7 on 2023-11-25 12:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("employees", "0001_initial"),
        ("accounting", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Division",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        verbose_name="Mark as Active",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Enter the division name (e.g., A, B)", max_length=50),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Enter a description for the standard"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="creator_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ("name",)},
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        verbose_name="Mark as Active",
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(blank=True, max_length=200, null=True)),
                ("admission_number", models.PositiveBigIntegerField(unique=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "blood_group",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("a-positive", "A +Ve"),
                            ("b-positive", "B +Ve"),
                            ("ab-positive", "AB +Ve"),
                            ("o-positive", "O +Ve"),
                            ("a-negative", "A -Ve"),
                            ("b-negative", "B -Ve"),
                            ("ab-negative", "AB -Ve"),
                            ("o-negative", "O -Ve"),
                        ],
                        max_length=300,
                        null=True,
                    ),
                ),
                ("date_of_joining", models.DateField(blank=True, null=True)),
                ("religion", models.CharField(blank=True, max_length=128, null=True)),
                ("bus_no", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "father_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "mother_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "primary_contact_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "secondary_contact_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="creator_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "division",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="students",
                        to="students.division",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        limit_choices_to={
                            "is_active": True,
                            "is_superuser": False,
                            "usertype": "student",
                        },
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="student",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ("first_name",)},
        ),
        migrations.CreateModel(
            name="StudentFeeStatement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        verbose_name="Mark as Active",
                    ),
                ),
                (
                    "academic_year",
                    models.CharField(
                        choices=[
                            ("", "Select Academic Year"),
                            ("2023-2024", "2023-2024"),
                            ("2024-2025", "2024-2025"),
                        ],
                        max_length=128,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("date", models.DateField()),
                (
                    "voucher_number",
                    models.PositiveBigIntegerField(
                        blank=True,
                        null=True,
                        unique=True,
                        verbose_name="Receipt Number",
                    ),
                ),
                ("remarks", models.TextField(blank=True, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="studentfeestatement_account",
                        to="accounting.account",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="creator_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="student_fee_statement",
                        to="students.student",
                    ),
                ),
            ],
            options={
                "verbose_name": "Student Fee Receipt",
                "verbose_name_plural": "StudentFee Receipts",
            },
        ),
        migrations.CreateModel(
            name="Standard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        verbose_name="Mark as Active",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter the standard name (e.g., Grade 1, Class 10)",
                        max_length=50,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Enter a description for the standard"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="creator_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ("created",)},
        ),
        migrations.AddField(
            model_name="division",
            name="standard",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="students.standard"),
        ),
        migrations.AddField(
            model_name="division",
            name="tutor",
            field=models.ForeignKey(
                limit_choices_to={"user__usertype": "teacher"},
                on_delete=django.db.models.deletion.PROTECT,
                to="employees.employee",
            ),
        ),
        migrations.AlterUniqueTogether(name="division", unique_together={("standard", "name")}),
        migrations.CreateModel(
            name="AcademicYearStudentFee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        verbose_name="Mark as Active",
                    ),
                ),
                (
                    "academic_year",
                    models.CharField(
                        choices=[
                            ("", "Select Academic Year"),
                            ("2023-2024", "2023-2024"),
                            ("2024-2025", "2024-2025"),
                        ],
                        max_length=128,
                    ),
                ),
                ("school_fee", models.DecimalField(decimal_places=2, max_digits=10)),
                ("donation_fee", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="creator_%(class)s_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="students.student",
                    ),
                ),
            ],
            options={
                "ordering": ("academic_year",),
                "unique_together": {("academic_year", "student", "is_active")},
            },
        ),
    ]
